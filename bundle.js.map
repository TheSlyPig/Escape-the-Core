{"version":3,"sources":["webpack:///webpack/bootstrap 70c90645a6bf4cf36052","webpack:///./lib/escape_the_core.js","webpack:///./lib/game.js","webpack:///./lib/line.js","webpack:///./lib/center.js","webpack:///./lib/player.js","webpack:///./node_modules/line-circle-collision/index.js","webpack:///./node_modules/point-circle-collision/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;ACxGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9CA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kC;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;;AAEA,qC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70c90645a6bf4cf36052","import Game from './game.js';\n\nwindow.leftPressed = false;\nwindow.rightPressed = false;\n\nconst mainMenu = new Image();\nmainMenu.src = 'assets/images/MainMenu.png';\n\nconst menuBgm = new Audio('./assets/audio/Mangetsu.mp3');\nmenuBgm.addEventListener('ended', function () {\n  this.currentTime = 0;\n  this.play();\n}, false);\n\nmenuBgm.play();\n\nconst bgm = new Audio('./assets/audio/Xeleuiem.mp3');\nbgm.addEventListener('ended', function () {\n  this.currentTime = 0;\n  this.play();\n}, false);\n\nconst hitSound = new Audio('./assets/audio/hitSound.mp3');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const gameCanvas = document.getElementById('game');\n  gameCanvas.height = 500;\n  gameCanvas.width = 500;\n  const canvasContext = gameCanvas.getContext('2d');\n\n  mainMenu.onload = () => {\n    canvasContext.drawImage(mainMenu, 0, 0);\n  };\n\n  let game = new Game(\n    canvasContext,\n    gameCanvas,\n    gameCanvas.width,\n    gameCanvas.height,\n    bgm,\n    hitSound\n  );\n\n  window.addEventListener('keydown', checkKeyPressed, false);\n  window.addEventListener('keyup', checkKeyLifted, false);\n\n  function checkKeyPressed(event) {\n    switch (event.keyCode) {\n      case 37:\n        window.leftPressed = true;\n        break;\n      case 39:\n        window.rightPressed = true;\n        break;\n      case 32:\n        if (game.gameOver === true) {\n          game = new Game(\n            canvasContext,\n            gameCanvas,\n            gameCanvas.width,\n            gameCanvas.height,\n            bgm,\n            hitSound\n          );\n          game.gameActive = true;\n          menuBgm.pause();\n          bgm.play();\n          game.begin();\n        } else if (game.gameActive === false) {\n          game.gameActive = true;\n          menuBgm.pause();\n          bgm.play();\n          game.begin();\n        }\n\n        break;\n      case 77:\n        if (game.gameActive === true) {\n          if (bgm.paused) {\n            bgm.play();\n          } else {\n            bgm.pause();\n          }\n        } else {\n          if (menuBgm.paused) {\n            menuBgm.play();\n          } else {\n            menuBgm.pause();\n          }\n        }\n    }\n  }\n\n  function checkKeyLifted(event) {\n    switch (event.keyCode) {\n      case 37:\n        window.leftPressed = false;\n        break;\n      case 39:\n        window.rightPressed = false;\n        break;\n    }\n  }\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/escape_the_core.js\n// module id = 0\n// module chunks = 0","import Line from './line.js';\nimport Center from './center.js';\nimport Player from './player.js';\nimport Collide from 'line-circle-collision';\n\nclass Game {\n  constructor(ctx, gameCanvas, xDim, yDim, bgm, hitSound) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.xDim = xDim;\n    this.yDim = yDim;\n    this.bgm = bgm;\n    this.hitSound = hitSound;\n\n    this.gameActive = false;\n    this.gameOver = false;\n\n    this.lines = [];\n    this.lines2 = [];\n    this.frames;\n    this.r = 250;\n    this.g = 150;\n    this.b = 50;\n    this.color = 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n\n    this.center = new Center(ctx, gameCanvas);\n    this.player = new Player(ctx, gameCanvas, this.color);\n    this.difficultyModifier = 1;\n\n    this.interval = 0;\n    this.interval2 = -37;\n\n    this.rotateTimer = 130;\n    this.rotateDir = 'left';\n    this.rotateSpeed = 90;\n\n\n    this.gameOverScreen = new Image();\n    this.gameOverScreen.src = 'assets/images/GameOver.png';\n  }\n\n  moveLines() {\n    this.lines.forEach(line => {\n      line.closeIn();\n    });\n    this.lines2.forEach(line => {\n      line.closeIn();\n    });\n  };\n\n  begin() {\n\n    const animateCallback = () => {\n      this.render(this.ctx);\n      this.frames = requestAnimationFrame(animateCallback);\n    };\n\n    if (this.gameActive === true) {\n      animateCallback();\n    } else {\n      cancelAnimationFrame(frames);\n    }\n  };\n\n  end() {\n    this.color = 'red';\n    this.hitSound.play();\n    this.bgm.pause();\n    this.bgm.currentTime = 0;\n    this.gameActive = false;\n    this.gameOver = true;\n    this.ctx.resetTransform();\n    cancelAnimationFrame(this.frames);\n  }\n\n  choosePattern(ctx) {\n    let allDiagLines = [\n                new Line(ctx, this.gameCanvas, 1, this.color),\n                new Line(ctx, this.gameCanvas, 2, this.color),\n                new Line(ctx, this.gameCanvas, 3, this.color),\n                new Line(ctx, this.gameCanvas, 4, this.color),\n                ];\n    let allLines = [\n                new Line(ctx, this.gameCanvas, 5, this.color),\n                new Line(ctx, this.gameCanvas, 6, this.color),\n                new Line(ctx, this.gameCanvas, 7, this.color),\n                new Line(ctx, this.gameCanvas, 8, this.color),\n                ];\n    return Math.floor(Math.random() * 3) === 1 ? allDiagLines : allLines;\n  }\n\n  makePatterns(ctx) {\n    let chosenLines = this.choosePattern(ctx);\n    if (this.interval > 74) {\n      let randNum = Math.floor(Math.random() * chosenLines.length);\n      if (Math.floor(Math.random() * this.difficultyModifier) === 0) {\n        chosenLines.splice((randNum + Math.floor((Math.random() * 3) + 1)) % 4, 1);\n      }\n\n      chosenLines.splice(randNum, 1);\n      this.lines = chosenLines;\n      this.interval = 0;\n    } else {\n      this.interval += 1;\n    }\n\n    let chosenLines2 = this.choosePattern(ctx);\n    if (this.interval2 > 74) {\n      let randNum2 = Math.floor(Math.random() * chosenLines2.length);\n      if (Math.floor(Math.random() * this.difficultyModifier) === 0) {\n        chosenLines2.splice((randNum2 + Math.floor((Math.random() * 3) + 1)) % 4, 1);\n      }\n\n      chosenLines2.splice(randNum2, 1);\n      this.lines2 = chosenLines2;\n      this.interval2 = 0;\n    } else {\n      this.interval2 += 1;\n    }\n\n  }\n\n  checkCollision() {\n    let circle = [this.player.ball.x, this.player.ball.y];\n    let radius = this.player.ball.radius;\n    this.lines.forEach((line) => {\n      let a = line.startPoint;\n      let b = line.endPoint;\n      let hit = Collide(a, b, circle, radius);\n      if (hit === true) {\n        this.end();\n      }\n    });\n    this.lines2.forEach((line) => {\n      let a = line.startPoint;\n      let b = line.endPoint;\n      let hit = Collide(a, b, circle, radius);\n      if (hit === true) {\n        this.end();\n      }\n    });\n  }\n\n  rotate(ctx, flip) {\n    if (flip === true) this.rotateDir = this.rotateDir === 'left' ? 'right' : 'left';\n    let rotation = this.rotateDir === 'left' ? -this.rotateSpeed : this.rotateSpeed;\n    ctx.translate(this.gameCanvas.width / 2, this.gameCanvas.width / 2);\n    ctx.rotate(Math.PI / rotation);\n    ctx.translate(-this.gameCanvas.width / 2, -this.gameCanvas.width / 2);\n  }\n\n  setColor() {\n    this.r += Math.floor(Math.random() * 250) + 2;\n    this.r = this.r % 256;\n    if (this.r < 40) this.r = 40;\n\n    this.g += Math.floor(Math.random() * 250) + 2;\n    this.g = this.g % 256;\n    if (this.g < 40) this.g = 40;\n\n    this.b += Math.floor(Math.random() * 250) + 2;\n    this.b = this.b % 256;\n    if (this.b < 40) this.b = 40;\n\n    this.color = 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n    this.player.color = 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  render(ctx) {\n    if (this.gameActive === true) {\n      this.makePatterns(ctx);\n\n      this.checkCollision();\n      ctx.clearRect(-700, -700, this.gameCanvas.width + 700, this.gameCanvas.height + 700);\n      if (this.rotateTimer < 1) {\n        this.rotate(ctx, true);\n        this.rotateTimer = Math.floor(Math.random() * 190) + 70;\n      } else {\n        this.rotate(ctx, false);\n        this.rotateTimer = this.rotateTimer - 1;\n      }\n\n      this.setColor();\n\n      this.moveLines();\n      this.player.render(ctx);\n      this.lines.forEach((line) => {\n        line.render(ctx);\n      });\n      this.lines2.forEach((line) => {\n        line.render(ctx);\n      });\n      this.center.render(ctx);\n    } else {\n      this.ctx.drawImage(this.gameOverScreen, 0, 0);\n    }\n  };\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","class Line {\n  constructor(ctx, gameCanvas, type, color) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.color = color;\n    this.x = 0;\n    this.y = 0;\n    this.halfWidth = this.gameCanvas.width / 2;\n    this.halfHeight = this.gameCanvas.height / 2;\n    this.fullWidth = this.gameCanvas.width;\n    this.fullHeight = this.gameCanvas.height;\n\n    this.lineWidth = 10;\n    this.type = type;\n    this.handleType(type);\n    this.startPoint = [0, 0];\n    this.endPoint = [0, 0];\n  }\n\n  handleType(type) {\n    if (type === 1) {\n      this.x = -200;\n      this.y = 0;\n    } else if (type === 2) {\n      this.x = this.gameCanvas.height + 200;\n      this.y = this.gameCanvas.width;\n    } else if (type === 3) {\n      this.x = (this.gameCanvas.width / 2);\n      this.y = -200;\n    } else if (type === 4) {\n      this.x = -200;\n      this.y = this.gameCanvas.height / 2;\n    } else if (type === 5) {\n      this.x = 0;\n      this.y = 0;\n    } else if (type === 6) {\n      this.x = this.gameCanvas.width;\n      this.y = 0;\n    } else if (type === 7) {\n      this.x = 0;\n      this.y = 0;\n    } else if (type === 8) {\n      this.x = 0;\n      this.y = this.gameCanvas.height;\n    }\n\n  }\n\n  // randomColor() {\n  //   const HEX_DIGITS = '0123456789ABCDEF';\n  //   let color = '#';\n  //   for (let i = 0; i < 6; i++) {\n  //     color += HEX_DIGITS[Math.floor((Math.random() * 16))];\n  //   }\n  //\n  //   return color;\n  // }\n\n  closeIn() {\n    if (this.type < 5) {\n      if (this.type === 1) {\n        this.x = this.x + 5;\n        this.y = this.y + 5;\n      } else if (this.type === 2) {\n        this.x = this.x - 5;\n        this.y = this.y - 5;\n      } else if (this.type === 3) {\n        this.fullWidth = this.fullWidth - 5;\n        this.y = this.y + 5;\n      } else if (this.type === 4) {\n        this.x = this.x + 5;\n        this.fullHeight = this.fullHeight - 5;\n      }\n\n    } else {\n      if (this.type === 5) {\n        this.x = this.x + 3;\n        this.y = this.y + 3;\n        this.fullHeight = this.fullHeight - 3;\n      } else if (this.type === 6) {\n        this.x = this.x - 3;\n        this.y = this.y + 3;\n        this.fullHeight = this.fullHeight - 3;\n      } else if (this.type === 7) {\n        this.x = this.x + 3;\n        this.y = this.y + 3;\n        this.fullWidth = this.fullWidth - 3;\n      } else if (this.type === 8) {\n        this.x = this.x + 3;\n        this.y = this.y - 3;\n        this.fullWidth = this.fullWidth - 3;\n      }\n\n    }\n\n  }\n\n  render(ctx) {\n    ctx.beginPath();\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.lineWidth;\n    if (this.type === 1) {\n      this.startPoint = [this.x, this.halfHeight];\n      ctx.moveTo(this.x, this.halfHeight);\n      this.endPoint = [this.halfWidth, this.y - 200];\n      ctx.lineTo(this.halfWidth, this.y - 200);\n    } else if (this.type === 2) {\n      this.startPoint = [this.x, this.halfHeight];\n      ctx.moveTo(this.x, this.halfHeight);\n      this.endPoint = [this.halfWidth, this.y + 200];\n      ctx.lineTo(this.halfWidth, this.y + 200);\n    } else if (this.type === 3) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth + 200, this.halfHeight];\n      ctx.lineTo(this.fullWidth + 200, this.halfHeight);\n    } else if (this.type === 4) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.halfWidth, this.fullHeight + 200];\n      ctx.lineTo(this.halfWidth, this.fullHeight + 200);\n    } else if (this.type === 5) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.x, this.fullHeight];\n      ctx.lineTo(this.x, this.fullHeight);\n    } else if (this.type === 6) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.x, this.fullHeight];\n      ctx.lineTo(this.x, this.fullHeight);\n    } else if (this.type === 7) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth, this.y];\n      ctx.lineTo(this.fullWidth, this.y);\n    } else if (this.type === 8) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth, this.y];\n      ctx.lineTo(this.fullWidth, this.y);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  }\n}\n\nexport default Line;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/line.js\n// module id = 2\n// module chunks = 0","class Center {\n  constructor(ctx, gameCanvas) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.color = 'darkgray';\n  }\n\n  render(ctx) {\n    let centerX = this.gameCanvas.width / 2;\n    let centerY = this.gameCanvas.height / 2;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 55, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\nexport default Center;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/center.js\n// module id = 3\n// module chunks = 0","class Player {\n  constructor(ctx, gameCanvas, color) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.color = color;\n    this.circle = {\n      centerX: this.gameCanvas.width / 2,\n      centerY: this.gameCanvas.height / 2,\n      radius: 75,\n      angle: 0,\n    };\n    this.ball = { x: 0, y: 0, speed: 0 };\n    this.ball.x = 0;\n    this.ball.y = 0;\n    this.ball.radius = 8;\n  }\n\n  render(ctx) {\n\n    if (window.rightPressed) {\n      this.ball.speed = .1;\n    }\n\n    if (window.leftPressed) {\n      this.ball.speed = -.1;\n    }\n\n    if (!window.leftPressed && !window.rightPressed) {\n      this.ball.speed = 0;\n    }\n\n    ctx.strokeStyle = this.color;\n\n    this.ball.x = this.circle.centerX + Math.cos(this.circle.angle) * this.circle.radius;\n    this.ball.y = this.circle.centerY + Math.sin(this.circle.angle) * this.circle.radius;\n\n    this.circle.angle += this.ball.speed;\n\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.ball.x, this.ball.y, this.ball.radius, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 4\n// module chunks = 0","var pointCircleCollide = require('point-circle-collision')\n\nvar tmp = [0, 0]\n\nfunction lineCircleCollide(a, b, circle, radius, nearest) {\n    //check to see if start or end points lie within circle \n    if (pointCircleCollide(a, circle, radius)) {\n        if (nearest) {\n            nearest[0] = a[0]\n            nearest[1] = a[1]\n        }\n        return true\n    } if (pointCircleCollide(b, circle, radius)) {\n        if (nearest) {\n            nearest[0] = b[0]\n            nearest[1] = b[1]\n        }\n        return true\n    }\n    \n    var x1 = a[0],\n        y1 = a[1],\n        x2 = b[0],\n        y2 = b[1],\n        cx = circle[0],\n        cy = circle[1]\n\n    //vector d\n    var dx = x2 - x1\n    var dy = y2 - y1\n    \n    //vector lc\n    var lcx = cx - x1\n    var lcy = cy - y1\n    \n    //project lc onto d, resulting in vector p\n    var dLen2 = dx * dx + dy * dy //len2 of d\n    var px = dx\n    var py = dy\n    if (dLen2 > 0) {\n        var dp = (lcx * dx + lcy * dy) / dLen2\n        px *= dp\n        py *= dp\n    }\n    \n    if (!nearest)\n        nearest = tmp\n    nearest[0] = x1 + px\n    nearest[1] = y1 + py\n    \n    //len2 of p\n    var pLen2 = px * px + py * py\n    \n    //check collision\n    return pointCircleCollide(nearest, circle, radius)\n            && pLen2 <= dLen2 && (px * dx + py * dy) >= 0\n}\n\nmodule.exports = lineCircleCollide\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/line-circle-collision/index.js\n// module id = 5\n// module chunks = 0","function pointCircleCollision(point, circle, r) {\n    if (r===0) return false\n    var dx = circle[0] - point[0]\n    var dy = circle[1] - point[1]\n    return dx * dx + dy * dy <= r * r\n}\n\nmodule.exports = pointCircleCollision\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/point-circle-collision/index.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}